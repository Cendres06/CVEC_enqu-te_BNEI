import pandas as pd
import re
import spacy
import matplotlib.pyplot as plt

nlp = spacy.load('fr_core_news_lg')
nlp.Defaults.stop_words -= {"pas", "sais", "rien","non"}

file_path = r'perrine.xlsx'

a=0

def remove_anormal_punctuation(raw_sentence):
    res_sentence = raw_sentence.replace('‚Äô','\'')
    res_sentence = res_sentence.replace('/',' ')
    res_sentence = raw_sentence.replace('‚Äò','\'')
    res_sentence = raw_sentence.replace('(','')
    res_sentence = raw_sentence.replace(')','')
    res_sentence = raw_sentence.replace(' º','\'')
    return res_sentence

def remove_stopwords(token_list):
    res_list = []
    for token in token_list:
        if token.lemma_ not in nlp.Defaults.stop_words:
            res_list.append(token)
    return token

def count_lemme_by_answer(set):
    dict_of_known_lemma = {}
    for answer in set:
        for token in answer :
            lemma = token.lemma_
            if lemma not in dict_of_known_lemma.keys() :
                dict_of_known_lemma[lemma]=1
            else:
                dict_of_known_lemma[lemma]+=1
    return dict_of_known_lemma

def find_position_empty_lists(set):
    res_positions = []
    i=0
    while i in range(len(set)):
        element = set[i]
        if len(element) == 0:
            res_positions.append(i)
        i+=1
    return res_positions

def correction_lemma(dict):
    problematic_lemma = ['crou','cnou','cnous','etat',',','√©tat/','cultur\'','?','ecole','(',')','/','.','jsp','l','asso','idee','education',
                        'etudiant','region','...',' ','ministere','nsp','universite','‚Ä¶','superieur','univ','etablissement','assos','academie',
                        '-','etude','reverse','etudiante','!','surement','\'','d','u','>','ing√©','√©tudiant.e.','..','assoc','minist√©re','know',
                        'idk','superieure','universit√©s/','id√©ee','inge','/universite',':','/√©tat','l!universit√©','universitzire','universit√®',
                        '√©tudiant‚Ä¢e','crous\\','academi','l‚Äò√©cole','administation','*','independant','ratacher','√©duction','fran√ßai','french','government',
                        'x','partenair','l¬¥ecole','ministr√®re','administrafif',';','r√©partisse','etc.','chaqu√©','....','concern√©e//le','m√®r','academiqu',
                        'associtation','univerist√©','universtaire','entieret√©','deplorabl','crous/','eleve','dingenieur','amicales/','crous+√©coles','jcp',
                        'ÃÅen','selectionner','cnous/','assosiation','impot','largent','√©udiant','ref√©rente','organne','don\'','t','letat','plublic','universit√©t',
                        'l¬¥universit√©','biblioth√®qu','commisison','ministair','l√©tat','univeristair','ceou','l"√©tat','grupe','fonctionnair','la.e','tr√©soreri',
                        'etudiant.gouv.fr','regional','admin','oeuvre','√©leve','finacement','√©v√©nement','accad√©mie','√∏','associations/','√©coke','leducation',
                        'asssociation','scolaire/','l"etat','√©coles/','/la','√©ducation/','luniversit','specifiqu','universiataire','ratach√©','orgnisme',
                        'minsit√®re','universiter','50','typ','100','50/50','francai','cotisation','15','99','25','1','2','100000000','180','üòÇ','53','110',
                        'c','150','vaaaa','ae']
    keys = [key for key in dict.keys()]
    dict['culture']=0
    for key in keys:
        if key in problematic_lemma:
            if key=='crou' or key=='cnou' or key=='cnous' or key=='crous\\' or key=='crous/' or key=='cnous/' or key=='ceou':
                if 'crous' not in keys:
                    dict['crous']=0
                dict['crous']+=dict[key]
            elif key=='etat' or key=='√©tat/' or key=='/√©tat' or key=='letat' or key=='l√©tat' or key=='l"√©tat' or key=='l"etat':
                if '√©tat' not in keys:
                    dict['√©tat']=0
                dict['√©tat']+=dict[key]
            elif key=='cultur\'':
                if 'culture' not in keys:
                    dict['culture']=0
                dict['culture']+=dict[key]
            elif key=='ecole' or key=='l‚Äò√©cole' or key=='l¬¥ecole' or key=='√©coke' or key=='√©coles/':
                if '√©cole' not in keys:
                    dict['√©cole']=0
                dict['√©cole']+=dict[key]
            elif key=='scolaire/':
                if 'scolaire' not in keys:
                    dict['scolaire']=0
                dict['scolaire']+=dict[key]
            elif key=='jsp' or key=='nsp' or key=='idk' or key=='jcp':
                if 'sais' not in keys:
                    dict['sais']=0
                if 'pas' not in keys:
                    dict['pas']=0
                dict['sais']+=dict[key]
                dict['pas']+=dict[key]
            elif key=='know':
                if 'sais' not in keys:
                    dict['sais']=0
                dict['sais']+=dict[key]
            elif key=='don\'':
                if 'pas' not in keys:
                    dict['pas']=0
                dict['pas']+=dict[key]
            elif key=='universite' or key=='univ' or key=='universit√©s/' or key=='/universite' or key=='l!universit√©' or key=='universit√®' or key=='univerist√©' or key=='universit√©t' or key=='l¬¥universit√©' or key=='luniversit' or key=='universiataire' or key=='universiter':
                if 'universit√©' not in keys:
                    dict['universit√©']=0
                dict['universit√©']+=dict[key]
            elif key=='universitzire' or key=='universtaire' or key=='univeristair':
                if 'universitaire' not in keys:
                    dict['universitaire']=0
                dict['universitaire']+=dict[key]
            elif key=='asso' or key=='assos' or key=='assoc' or key=='associtation' or key=='assosiation' or key=='associations/' or key=='asssociation':
                if 'association' not in keys:
                    dict['association']=0
                dict['association']+=dict[key]
            elif key=='idee' or key=='id√©ee':
                if 'id√©e' not in keys:
                    dict['id√©e']=0
                dict['id√©e']+=dict[key]
            elif key=='education' or key=='√©duction' or key=='leducation' or key=='√©ducation/':
                if '√©ducation' not in keys:
                    dict['√©ducation']=0
                dict['√©ducation']+=dict[key]
            elif key=='etudiant' or key=='etudiante' or key=='√©tudiant.e.' or key=='√©tudiant‚Ä¢e' or key=='√©udiant':
                if '√©tudiant' not in keys:
                    dict['√©tudiant']=0
                dict['√©tudiant']+=dict[key]
            elif key=='eleve' or key=='√©leve':
                if '√©l√®ve' not in keys:
                    dict['√©l√®ve']=0
                dict['√©l√®ve']+=dict[key]
            elif key=='region':
                if 'r√©gion' not in keys:
                    dict['r√©gion']=0
                dict['r√©gion']+=dict[key]
            elif key=='regional':
                if 'r√©gional' not in keys:
                    dict['r√©gional']=0
                dict['r√©gional']+=dict[key]
            elif key=='ministere' or key=='minist√©re' or key=='ministr√®re' or key=='ministair' or key=='minsit√®re':
                if 'minist√®re' not in keys:
                    dict['minist√®re']=0
                dict['minist√®re']+=dict[key]
            elif key=='superieur' or key=='superieure':
                if 'sup√©rieur' not in keys:
                    dict['sup√©rieur']=0
                dict['sup√©rieur']+=dict[key]
            elif key=='etablissement':
                if '√©tablissement' not in keys:
                    dict['√©tablissement']=0
                dict['√©tablissement']+=dict[key]
            elif key=='academie' or key=='academi' or key=='accad√©mie':
                if 'acad√©mie' not in keys:
                    dict['acad√©mie']=0
                dict['acad√©mie']+=dict[key]
            elif key=='academiqu':
                if 'acad√©mique' not in keys:
                    dict['acad√©mique']=0
                dict['acad√©mique']+=dict[key]
            elif key=='etude':
                if '√©tude' not in keys:
                    dict['√©tude']=0
                dict['√©tude']+=dict[key]
            elif key=='reverse':
                if 'reverser' not in keys:
                    dict['reverser']=0
                dict['reverser']+=dict[key]
            elif key=='surement':
                if 's√ªrement' not in keys:
                    dict['s√ªrement']=0
                dict['s√ªrement']+=dict[key]
            elif key=='ing√©' or key=='inge' or key=='dingenieur':
                if 'ing√©nieur' not in keys:
                    dict['ing√©nieur']=0
                dict['ing√©nieur']+=dict[key]
            elif key=='administation' or key=='admin':
                if 'administration' not in keys:
                    dict['administration']=0
                dict['administration']+=dict[key]
            elif key=='administrafif':
                if 'administratif' not in keys:
                    dict['administratif']=0
                dict['administratif']+=dict[key]
            elif key=='independant':
                if 'ind√©pendant' not in keys:
                    dict['ind√©pendant']=0
                dict['ind√©pendant']+=dict[key]
            elif key=='ratacher' or key=='ratach√©':
                if 'rattacher' not in keys:
                    dict['rattacher']=0
                dict['rattacher']+=dict[key]
            elif key=='fran√ßai' or key=='french' or key=='francai':
                if 'fran√ßais' not in keys:
                    dict['fran√ßais']=0
                dict['fran√ßais']+=dict[key]
            elif key=='government':
                if 'gouvernement' not in keys:
                    dict['gouvernement']=0
                dict['gouvernement']+=dict[key]
            elif key=='partenair':
                if 'partenaire' not in keys:
                    dict['partenaire']=0
                dict['partenaire']+=dict[key]
            elif key=='r√©partisse':
                if 'r√©partir' not in keys:
                    dict['r√©partir']=0
                dict['r√©partir']+=dict[key]
            elif key=='concern√©e//le':
                if 'concern√©' not in keys:
                    dict['concern√©']=0
                dict['concern√©']+=dict[key]
            elif key=='entieret√©':
                if 'enti√®ret√©' not in keys:
                    dict['enti√®ret√©']=0
                dict['enti√®ret√©']+=dict[key]
            elif key=='deplorabl':
                if 'd√©plorable' not in keys:
                    dict['d√©plorable']=0
                dict['d√©plorable']+=dict[key]
            elif key=='crous+√©coles':
                if 'crous' not in keys:
                    dict['crous']=0
                dict['crous']+=dict[key]
                if '√©cole' not in keys:
                    dict['√©cole']=0
                dict['√©cole']+=dict[key]
            elif key=='selectionner':
                if 's√©lectionner' not in keys:
                    dict['s√©lectionner']=0
                dict['s√©lectionner']+=dict[key]
            elif key=='impot':
                if 'imp√¥t' not in keys:
                    dict['imp√¥t']=0
                dict['imp√¥t']+=dict[key]
            elif key=='largent':
                if 'argent' not in keys:
                    dict['argent']=0
                dict['argent']+=dict[key]
            elif key=='ref√©rente':
                if 'r√©f√©rent' not in keys:
                    dict['r√©f√©rent']=0
                dict['r√©f√©rent']+=dict[key]
            elif key=='organne':
                if 'organe' not in keys:
                    dict['organe']=0
                dict['organe']+=dict[key]
            elif key=='orgnisme':
                if 'organisme' not in keys:
                    dict['organisme']=0
                dict['organisme']+=dict[key]
            elif key=='plublic':
                if 'public' not in keys:
                    dict['public']=0
                dict['public']+=dict[key]
            elif key=='biblioth√®qu':
                if 'biblioth√®que' not in keys:
                    dict['biblioth√®que']=0
                dict['biblioth√®que']+=dict[key]
            elif key=='commisison':
                if 'commission' not in keys:
                    dict['commisison']=0
                dict['commisison']+=dict[key]
            elif key=='grupe':
                if 'groupe' not in keys:
                    dict['groupe']=0
                dict['groupe']+=dict[key]
            elif key=='fonctionnair':
                if 'fonctionnaire' not in keys:
                    dict['fonctionnaire']=0
                dict['fonctionnaire']+=dict[key]
            elif key=='tr√©soreri':
                if 'tr√©sorerie' not in keys:
                    dict['tr√©sorerie']=0
                dict['tr√©sorerie']+=dict[key]
            elif key=='etudiant.gouv.fr':
                if '.gouv' not in keys:
                    dict['.gouv']=0
                dict['.gouv']+=dict[key]
            elif key=='oeuvre':
                if '≈ìuvre' not in keys:
                    dict['≈ìuvre']=0
                dict['≈ìuvre']+=dict[key]
            elif key=='finacement':
                if 'financement' not in key:
                    dict['finacement']=0
                dict['financement']+=dict[key]
            elif key=='√©v√©nement':
                if '√©v√®nement' not in keys:
                    dict['√©v√©nement']=0
                dict['√©v√©nement']+=dict[key]
            elif key=='specifiqu':
                if 'sp√©cifique' not in keys:
                    dict['sp√©cifique']=0
                dict['sp√©cifique']+=dict[key]
            elif key=='typ':
                if 'type' not in keys:
                    dict['type']=0
                dict['type']+=dict[key]
            elif key=='cotisation':
                if 'c√¥tisation' not in keys:
                    dict['c√¥tisation']=0
                dict['c√¥tisation']+=dict[key]
            elif key=='ae':
                if 'association' not in keys:
                    dict['association']=0
                dict['association']+=dict[key]
                if '√©tudiant' not in keys:
                    dict['√©tudiant']=0
                dict['√©tudiant']+=dict[key]
    for lemma in problematic_lemma:
        if lemma in keys:
            del dict[lemma]

data = pd.read_excel(file_path)
data['Answer']=data["D'apr√®s vous, qui r√©colte la CVEC ?"]
del data["D'apr√®s vous, qui r√©colte la CVEC ?"]
answers_list = [nlp(remove_anormal_punctuation(data['Answer'].iloc[i].lower())) for i in range(len(data.index))]
dict_res = count_lemme_by_answer(answers_list)

keys_stop_words = []
for key in dict_res.keys():
    if key in nlp.Defaults.stop_words:
        keys_stop_words.append(key)

for key in keys_stop_words:
    del dict_res[key]

correction_lemma(dict_res)
dict_pertinent_res = {key:value for key, value in dict_res.items() if value>30}
dict_pertinent_res['Ne sais pas/Aucune id√©e']=min(dict_pertinent_res['savoir'],dict_pertinent_res['pas'])+min(dict_pertinent_res['id√©e'],dict_pertinent_res['aucun'])
del dict_pertinent_res['savoir']
del dict_pertinent_res['pas']
del dict_pertinent_res['id√©e']
del dict_pertinent_res['aucun']
dict_pertinent_res = {key:value for key, value in sorted(dict_pertinent_res.items(), key=lambda item: -item[1])}

# for element in dict_res.keys():
#     print(element)
#     input()
# print(dict_res)


fig, ax = plt.subplots(layout='constrained')
names = [key for key in dict_pertinent_res.keys()]
values = [100*value/len(answers_list) for value in dict_pertinent_res.values()]

bars_container=ax.bar(names, values)
ax.bar_label(bars_container,[str(round(value,2))+'%' for value in values])

ax.set_title('D\'apr√®s vous, qui r√©colte la CVEC ?')
ax.set_ylabel('Pourcentage de r√©ponses comprenant le mot (%)')
ax.set_xlabel('Mots les plus fr√©quemment observ√©s dans les r√©ponses')

fig.autofmt_xdate()

plt.show()